Quando gostaria de usar um repositório remoto em vez de manter o trabalho local?

	A utilização de um repositório remoto seria interessante quando for necessário ou interessante trabalhar em diferentes máquinas ou
	lugares e quiser deixar meu trabalho disponível para o acesso.

Por que você prefere efetuar pull de alterações manualmente do que deixar o Git atualizar-se automaticamente com seu repositório remoto?

	Se ocorresse atualizações automáticas, muitos trabalhos envolvendo muitos colaboradores seriam praticamente inviabilizados,
	pois o repositório local estaria se atualizando em momentos nos quais você estaria trabalhando em uma parte que não poderia ser atualizada
	naquele momento. 
	A atualização manual permite que você tenha um maior controle sobre o momento ideal para você atualizar o repositório local.

Descreva as diferenças entre bifurcações, clones e branches. Quando você usaria um e não os outros?

	Bifurcações: São cópias de repositórios realizadas dentro do próprio GitHub. 
	São utilizadas quando se deseja ter uma cópia do repositório de outra pessoa, executar alterações, compartilhar com outras pessoas,
	sem interferir na versão original do autor.

	Clones: São cópias de repositórios que fazemos para a nossa máquina, ou seja, do GitHub para a máquina local.
	São utilizados quando queremos que o repositório da máquina local esteja vinculado ao repositório original.

	Branches: São pontos de bifurcação dentro do mesmo repositório.
	São utilizados quando se deseja criar, no mesmo repositório, outros caminhos de evolução de alterações do repositório. São ramificações
	dentro do próprio repositório.

Qual é o benefício de ter uma cópia do último estado conhecido do remoto armazenado localmente?

	Ter uma cópia do último estado conhecido do remoto armazenado localmente permite que se trabalhe com a versão mais recente do repositório.

Como você colaboraria sem usar Git ou GitHub? O que seria mais fácil e mais difícil?

	Para colaborar sem utilizar o Git ou GitHub, eu especificaria o meu trabalho realizado utilizando alguma marcação dentro do trabalho original
	mostrando as alterações e/ou inclusões feitas e enviaria para o autor principal para proceder os ajustes e incorporações finais.
	Seria mais difícil, pois teria que marcar para o responsável o local das alterações e ele teria o trabalho de efetuar a modificação
	no trabalho original, mesmo aceitando minhas modificações. Outro problema seria no em como guardar as versões sem alteração. Neste caso,
	seria necessário ter uma cópia para cada versão, o que dificultaria o acompanhamento de todo o desenvolvimento do trabalho.

Quando você gostaria de fazer alterações em um branch separado, e não diretamente no master? Quais são os benefícios de cada abordagem?

	Fazer uma alteração em um branch separado é interessante quando se quer incluir alguma alteração em uma versão em que se está trabalhando, mas não quiser
	comproter o master com uma possível falha. Quando se quer testar as alterações ou manter duas versões do mesmo projeto, também são exemplos de aplicabilidade.
	O benefício da abordagem de fazer alterações em um branch separado é a possibilidade de verificar o comportamento das alterações antes de incluí-las no master.
	Já a abordagem de fazer as alterações no master é poder trabalhar com a versão mais atualizada do master e quando se tem certeza de que
	as alterações são imprecindíveis para o restante do desenvolvimento do projeto.

